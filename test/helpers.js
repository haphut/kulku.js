/**
 * kulku.js - Mobility data processing
 * Copyright (C) 2015 haphut <haphut@gmail.com>
 *
 * This file is part of kulku.js.
 *
 * kulku.js is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * kulku.js is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with kulku.js.  If not, see <http://www.gnu.org/licenses/>.
 */

import _ from 'lodash';
import should from 'should';
import turf from 'turf';

// FIXME: Replace with jsverify.
const throwOnNotArray = (func, msg) => {
  _.partial(func, 'foo').should.throw(msg);
  _.partial(func, '').should.throw(msg);
  _.partial(func, '123').should.throw(msg);
  _.partial(func, true).should.throw(msg);
  _.partial(func, 0).should.throw(msg);
  _.partial(func, {}).should.throw(msg);
  _.partial(func, () => {}).should.throw(msg);
  _.partial(func, null).should.throw(msg);
  _.partial(func, undefined).should.throw(msg);
  _.partial(func).should.throw(msg);
};

// FIXME: Replace with jsverify.
const throwOnNotNumber = (func, msg) => {
  _.partial(func, 'foo').should.throw(msg);
  _.partial(func, '').should.throw(msg);
  _.partial(func, '123').should.throw(msg);
  _.partial(func, true).should.throw(msg);
  _.partial(func, {}).should.throw(msg);
  _.partial(func, []).should.throw(msg);
  _.partial(func, () => {}).should.throw(msg);
  _.partial(func, null).should.throw(msg);
  _.partial(func, undefined).should.throw(msg);
  _.partial(func).should.throw(msg);
};

const fakeRealisticMobilityData = () => {
  // Alppipuisto, Helsinki.
  const itineraryCoordinates = [
    [ 24.93524, 60.19086 ],
    [ 24.93522, 60.19069 ],
    [ 24.93527, 60.19055 ],
    [ 24.93550, 60.19042 ],
    [ 24.93558, 60.19034 ],
    [ 24.93558, 60.19026 ],
    [ 24.93556, 60.19007 ],
    [ 24.93556, 60.18997 ],
    [ 24.93559, 60.18989 ],
    [ 24.93572, 60.18970 ],
    [ 24.93528, 60.18967 ],
    [ 24.93532, 60.18952 ],
    [ 24.93535, 60.18934 ],
    [ 24.93537, 60.18919 ],
    [ 24.93541, 60.18908 ],
    [ 24.93579, 60.18833 ],
    [ 24.93587, 60.18805 ],
    [ 24.93590, 60.18797 ],
    [ 24.93604, 60.18766 ],
    [ 24.93612, 60.18755 ],
    [ 24.93617, 60.18745 ],
    [ 24.93648, 60.18678 ],
    [ 24.93683, 60.18602 ],
    [ 24.93695, 60.18576 ],
    [ 24.93703, 60.18575 ],
    [ 24.93754, 60.18577 ],
    [ 24.93759, 60.18576 ],
    [ 24.93759, 60.18568 ],
    [ 24.93743, 60.18569 ],
    [ 24.93728, 60.18568 ]
  ];

  // Fake jogging coordinates.
  const fixCoordinates = [
    [ 24.93522047996521,  60.19090809097702  ],
    [ 24.93521511554718,  60.19085742335814  ],
    [ 24.935279488563538, 60.19080408893797  ],
    [ 24.935274124145508, 60.19070542003223  ],
    [ 24.93517756462097,  60.19066008557072  ],
    [ 24.93522047996521,  60.19059875061133  ],
    [ 24.935317039489746, 60.19059608387137  ],
    [ 24.935354590415955, 60.19052141506442  ],
    [ 24.935386776924133, 60.190449412839726 ],
    [ 24.9354887008667,   60.19039074424357  ],
    [ 24.935590624809265, 60.19036941018263  ],
    [ 24.93561208248138,  60.190294740860075 ],
    [ 24.935547709465027, 60.19024140552569  ],
    [ 24.935579895973206, 60.19015073525835  ],
    [ 24.93549942970276,  60.19005739795687  ],
    [ 24.935349225997925, 60.19002272974871  ],
    [ 24.935585260391235, 60.189961393598445 ],
    [ 24.935563802719116, 60.18988405654998  ],
    [ 24.935665726661682, 60.189857388559986 ],
    [ 24.935622811317444, 60.189796052100796 ],
    [ 24.93571937084198,  60.18976138361664  ],
    [ 24.935644268989563, 60.189729381906474 ],
    [ 24.93561208248138,  60.18971071422779  ],
    [ 24.935536980628964, 60.18970271379081  ],
    [ 24.93546724319458,  60.18966804520811  ],
    [ 24.935392141342163, 60.18969204653849  ],
    [ 24.935349225997925, 60.18966271157673  ],
    [ 24.93524730205536,  60.18965737794451  ],
    [ 24.935268759727478, 60.1896227093139   ],
    [ 24.935333132743835, 60.189577373357096 ],
    [ 24.935295581817627, 60.18953203733768  ],
    [ 24.935317039489746, 60.189497368574706 ],
    [ 24.935376048088074, 60.189438698277    ],
    [ 24.935338497161865, 60.18936135999713  ],
    [ 24.935349225997925, 60.18931869052335  ],
    [ 24.935338497161865, 60.1892200171528   ],
    [ 24.935413599014282, 60.18917468063986  ],
    [ 24.935381412506104, 60.189126677204975 ],
    [ 24.93536531925201,  60.189073339972765 ],
    [ 24.93547797203064,  60.18901200204859  ],
    [ 24.93547260761261,  60.18893732963841  ],
    [ 24.93547797203064,  60.18883865512158  ],
    [ 24.935579895973206, 60.188827987588475 ],
    [ 24.935563802719116, 60.18872931274296  ],
    [ 24.935638904571533, 60.188673307968976 ],
    [ 24.935622811317444, 60.18860396859263  ],
    [ 24.93568181991577,  60.18857196575415  ],
    [ 24.93572473526001,  60.18850262616377  ],
    [ 24.93568181991577,  60.188443954088264 ],
    [ 24.93573546409607,  60.188387948827454 ],
    [ 24.935794472694397, 60.18839328266595  ],
    [ 24.935810565948486, 60.18834794501124  ],
    [ 24.935842752456665, 60.18828927265931  ],
    [ 24.935832023620605, 60.18825460258386  ],
    [ 24.935810565948486, 60.188163926828835 ],
    [ 24.93586421012878,  60.18810258720548  ],
    [ 24.935885667800903, 60.188065249987325 ],
    [ 24.935891032218933, 60.18799857627785  ],
    [ 24.935885667800903, 60.18797724066223  ],
    [ 24.935896396636963, 60.18794257025727  ],
    [ 24.9359929561615,   60.187886564141124 ],
    [ 24.93593394756317,  60.18785189364039  ],
    [ 24.936030507087704, 60.18774788191852  ],
    [ 24.936030507087704, 60.18769454244616  ],
    [ 24.936030507087704, 60.187649203826496 ],
    [ 24.936057329177856, 60.18760386514421  ],
    [ 24.93611097335815,  60.18755852639934  ],
    [ 24.936169981956482, 60.187529189531034 ],
    [ 24.936164617538452, 60.18743584477571  ],
    [ 24.93625581264496,  60.18740650779779  ],
    [ 24.93621826171875,  60.18730782867969  ],
    [ 24.93626117706299,  60.18724648745677  ],
    [ 24.936282634735107, 60.18717981208447  ],
    [ 24.93635237216949,  60.18708379931048  ],
    [ 24.936389923095703, 60.186929111472885 ],
    [ 24.93645429611206,  60.18683843205682  ],
    [ 24.93644893169403,  60.18677708995688  ],
    [ 24.936545491218567, 60.186750419442895 ],
    [ 24.936797618865967, 60.186750419442895 ],
    [ 24.936513304710385, 60.186705079519385 ],
    [ 24.93650257587433,  60.18667840894691  ],
    [ 24.936561584472656, 60.18664107010904  ],
    [ 24.936583042144775, 60.18659573003452  ],
    [ 24.936583042144775, 60.18652371919925  ],
    [ 24.936652779579163, 60.186430371585125 ],
    [ 24.936647415161133, 60.18637436288924  ],
    [ 24.93670642375946,  60.186281014850465 ],
    [ 24.93672788143158,  60.18621167042126  ],
    [ 24.936786890029907, 60.18618233234943  ],
    [ 24.936776161193848, 60.18605697847449  ],
    [ 24.936867356300354, 60.18597163088154  ],
    [ 24.936867356300354, 60.18591295428268  ],
    [ 24.936883449554443, 60.18582760631531  ],
    [ 24.93695318698883,  60.18578226511741  ],
    [ 24.9370014667511,   60.18572892245149  ],
    [ 24.937087297439575, 60.18577693085473  ],
    [ 24.937253594398495, 60.18575826092847  ],
    [ 24.937317967414856, 60.18578226511741  ],
    [ 24.93748426437378,  60.18577159659116  ],
    [ 24.937564730644226, 60.18575292666188  ],
    [ 24.937602281570435, 60.18571558677147  ],
    [ 24.937613010406494, 60.185646241148035 ],
    [ 24.937532544136047, 60.185691582533785 ],
    [ 24.937409162521362, 60.18563823972052  ],
    [ 24.937376976013184, 60.18569691681033  ],
    [ 24.937296509742737, 60.18565957685622  ],
    [ 24.93721604347229,  60.185670245418876 ]
  ];

  // Fake jogging Unix timestamps.
  const fixTimes = [
    1425043389620,
    1425043393673,
    1425043398174,
    1425043402244,
    1425043406416,
    1425043412223,
    1425043416688,
    1425043422070,
    1425043426487,
    1425043431954,
    1425043437869,
    1425043443422,
    1425043447763,
    1425043452005,
    1425043457400,
    1425043463276,
    1425043467384,
    1425043471787,
    1425043476113,
    1425043480229,
    1425043484668,
    1425043490367,
    1425043494699,
    1425043499302,
    1425043504841,
    1425043510588,
    1425043515753,
    1425043521423,
    1425043526520,
    1425043532383,
    1425043536947,
    1425043541353,
    1425043545608,
    1425043550444,
    1425043554523,
    1425043558871,
    1425043562961,
    1425043568387,
    1425043573059,
    1425043577744,
    1425043582430,
    1425043588022,
    1425043592753,
    1425043598533,
    1425043603598,
    1425043608884,
    1425043614321,
    1425043618867,
    1425043624181,
    1425043628933,
    1425043633739,
    1425043637848,
    1425043643106,
    1425043648125,
    1425043653582,
    1425043657967,
    1425043663367,
    1425043668582,
    1425043673254,
    1425043678148,
    1425043682856,
    1425043687840,
    1425043691848,
    1425043697610,
    1425043702942,
    1425043707602,
    1425043712258,
    1425043716291,
    1425043721983,
    1425043726308,
    1425043731401,
    1425043736625,
    1425043741756,
    1425043747272,
    1425043751621,
    1425043757572,
    1425043763358,
    1425043768330,
    1425043774138,
    1425043778574,
    1425043782882,
    1425043788495,
    1425043793378,
    1425043798442,
    1425043803499,
    1425043809136,
    1425043814962,
    1425043819807,
    1425043825061,
    1425043830156,
    1425043835925,
    1425043841223,
    1425043845819,
    1425043850579,
    1425043856211,
    1425043861057,
    1425043866660,
    1425043871073,
    1425043875088,
    1425043880489,
    1425043884716,
    1425043889217,
    1425043894413,
    1425043899227,
    1425043904062,
    1425043909010,
    1425043913780
  ];

  const itineraryFeature = turf.linestring(itineraryCoordinates);
  const fixTimestamps = _.map(fixTimes, t => new Date(t));
  // Avoid dependency on createFix.
  const fixes = _(fixCoordinates)
                .zip(fixTimestamps)
                .map(([coordinates, timestamp]) =>
                     turf.point(coordinates, { timestamp }))
                .value();

  return {
    itineraryCoordinates,
    itineraryFeature,
    fixCoordinates,
    fixTimes,
    fixTimestamps,
    fixes
  };
};

export {fakeRealisticMobilityData, throwOnNotArray, throwOnNotNumber};
